From 22291acb8fe5eb2f2c784fd251051b8e6f0916dd Mon Sep 17 00:00:00 2001
From: uib15788 <hong.2.yang@continental-corporation.com>
Date: Thu, 16 Mar 2023 11:42:52 +0800
Subject: [PATCH 1/1] wakeup reason change

Signed-off-by: uib15788 <hong.2.yang@continental-corporation.com>
---
 plat/nxp/s32/s32g/s32g_bl2_el3.c | 71 ++++++++++----------------------
 1 file changed, 22 insertions(+), 49 deletions(-)

diff --git a/plat/nxp/s32/s32g/s32g_bl2_el3.c b/plat/nxp/s32/s32g/s32g_bl2_el3.c
index 6a763e4..11eb7e2 100755
--- a/plat/nxp/s32/s32g/s32g_bl2_el3.c
+++ b/plat/nxp/s32/s32g/s32g_bl2_el3.c
@@ -28,34 +28,23 @@
 #include "SRAM_address.h"

 #define PERF_SYS_RESET_REASON     2
+#define PERF_SYS_S2R_REASON       1
 static bl_mem_params_node_t s32g_bl2_mem_params_descs[6];
 REGISTER_BL_IMAGE_DESCS(s32g_bl2_mem_params_descs)
-
+enum reset_cause reset_cause;
 static enum reset_cause get_reset_cause(void)
 {
-	uint32_t mc_rgm_des = mmio_read_32(MC_RGM_DES);
-
-	if (mc_rgm_des & DES_F_POR)
-		return CAUSE_POR;
-
-	if (mc_rgm_des & DES_F_DR_ANY) {
-		if (mmio_read_32(MC_RGM_RDSS) & RDSS_DES_RES)
-			return CAUSE_DESTRUCTIVE_RESET_DURING_STANDBY;
-		else
-			return CAUSE_DESTRUCTIVE_RESET_DURING_RUN;
-	}
+	uint32_t wake_up_reason = 0;
+	uint32_t boot_up_reason = *((volatile uint32_t*)HPCGEN2_SRAM_BOOT_MODE_FLAG_START_ADDRESS);
+	ERROR("boot_up_reason = %d\n", boot_up_reason);

-	if (mmio_read_32(MC_RGM_FES) & FES_F_FR_ANY) {
-		if (mmio_read_32(MC_RGM_RDSS) & RDSS_FES_RES)
-			return CAUSE_FUNCTIONAL_RESET_DURING_STANDBY;
-		else
-			return CAUSE_FUNCTIONAL_RESET_DURING_RUN;
+	if (boot_up_reason == 0)
+	{
+		wake_up_reason = *((volatile uint32_t*)HPCGEN2_SRAM_POWER_SHARABLE_RAM_START_ADDRESS);
+		ERROR("wake_up_reason = %d\n", wake_up_reason);
 	}

-	if (mmio_read_32(MC_ME_MODE_STAT) & MODE_STAT_PREV_MODE)
-		return CAUSE_WAKEUP_DURING_STANDBY;
-
-	return CAUSE_ERROR;
+	return wake_up_reason;
 }

 static void resume_bl31(struct s32g_ssram_mailbox *ssram_mb)
@@ -85,7 +74,6 @@ static void resume_bl31(struct s32g_ssram_mailbox *ssram_mb)
 void bl2_el3_early_platform_setup(u_register_t arg0, u_register_t arg1,
 				  u_register_t arg2, u_register_t arg3)
 {
-	enum reset_cause reset_cause;
 	size_t index = 0;
 	bl_mem_params_node_t *params = s32g_bl2_mem_params_descs;
 	struct s32g_ssram_mailbox *ssram_mb = (void *)BL31SSRAM_MAILBOX;
@@ -93,8 +81,7 @@ void bl2_el3_early_platform_setup(u_register_t arg0, u_register_t arg1,
 	reset_cause = get_reset_cause();
 	clear_reset_cause();

-	if ((reset_cause == CAUSE_WAKEUP_DURING_STANDBY) &&
-	    !ssram_mb->short_boot) {
+	if (reset_cause == PERF_SYS_S2R_REASON) {
 		/* Trampoline to bl31_warm_entrypoint */
 		resume_bl31(ssram_mb);
 		panic();
@@ -104,7 +91,7 @@ void bl2_el3_early_platform_setup(u_register_t arg0, u_register_t arg1,
 	console_s32_register();
 	s32_io_setup();

-	NOTICE("Reset status: %s\n", get_reset_cause_str(reset_cause));
+	NOTICE("Reset status: %d\n", reset_cause);

 	add_fip_img_to_mem_params_descs(params, &index);
 	add_bl31_img_to_mem_params_descs(params, &index);
@@ -128,18 +115,8 @@ static void copy_bl31ssram_image(void)
 void bl2_el3_plat_arch_setup(void)
 {
 	uint32_t ret;
-	uint32_t wake_up_reason = 0;
-	uint32_t boot_up_reason = *((volatile uint32_t*)HPCGEN2_SRAM_BOOT_MODE_FLAG_START_ADDRESS);
-	NOTICE("boot_up_reason = %d\n", boot_up_reason);
-
-	if (boot_up_reason == 0)
-	{
-		wake_up_reason = *((volatile uint32_t*)HPCGEN2_SRAM_POWER_SHARABLE_RAM_START_ADDRESS);
-		NOTICE("wake_up_reason = %d\n", wake_up_reason);
-	}

-	if ( wake_up_reason == PERF_SYS_RESET_REASON) {
-		mmio_write_32(PFE_COH_EN_ADDRESS, en_value);
+	if ( reset_cause == PERF_SYS_RESET_REASON) {
 		NOTICE("do not need s32_el3_mmu_fixup\n");
 	} else {
 		ret = s32_el3_mmu_fixup();
@@ -147,6 +124,9 @@ void bl2_el3_plat_arch_setup(void)
 			panic();
 	}

+	/* set PFE_COH_EN to 1e A core start up */
+	mmio_write_32(PFE_COH_EN_ADDRESS, en_value);
+
 	dt_init_ocotp();
 #ifndef HPER_GEN2_G3
 	dt_init_pmic();
@@ -172,20 +152,13 @@ void bl2_el3_plat_arch_setup(void)
 	clear_swt_faults();

 	/* This will also populate CSR section from bl31ssram */
-	if (boot_up_reason == 0)
+	if ( reset_cause == PERF_SYS_RESET_REASON)
 	{
-		if ( wake_up_reason == PERF_SYS_RESET_REASON)
-		{
-			NOTICE("ddr do not should init\n");
-		}
-		else
-		{
-			NOTICE("ddr do init\n");
-			ret = ddr_init();
-			if (ret)
-				panic();
-		}
-	} else {
+		NOTICE("ddr do not should init\n");
+	}
+	else
+	{
+		NOTICE("ddr do init\n");
 		ret = ddr_init();
 		if (ret)
 			panic();
--
2.35.1
